#!/usr/bin/python3
import customtkinter as ctk
from customtkinter import END, LEFT, TOP
from tkinter import messagebox, filedialog
import os
import sys

ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("dark-blue")

mainWindow = ctk.CTk()
mainWindow.minsize(1280, 1000)
mainWindow.title("New Editor")
mainWindow.geometry("1280x1000")

working_directory = os.getcwd()
path_of_app = os.path.realpath(__file__)
path_of_app = path_of_app[:len(path_of_app) - 10]
tmp = open(path_of_app + "PREF")
preffered_dir = tmp.readline()
del tmp

font_size = 14


def change_pref_dir():
    set_pref_dir = filedialog.askdirectory(initialdir=preffered_dir,
                                           title="change preffered directory",)
    f = open(path_of_app + "PREF", "w")
    f.write(set_pref_dir)


def save_as_func():
    global preffered_dir
    global filename
    filename = filedialog.asksaveasfilename(initialdir=preffered_dir,
                                            title="save as",
                                            filetypes=(("all files", "*"),
                                                       ("txt files", "*.txt")))
    if messagebox.askyesno("Are you sure", "do you want to proceed"):
        try:
            f = open(filename, "w")
            f.write(text_box.get("1.0", END))
        except FileNotFoundError:
            messagebox.showerror("ERROR", "file not found")
        except PermissionError:
            messagebox.showerror("ERROR", "permission denied")


def save_func():
    if filename != "":
        try:
            f = open(filename, "w")
            f.write(text_box.get("1.0", END))
        except FileNotFoundError:
            messagebox.showerror("ERROR", "file not found")
        except PermissionError:
            messagebox.showerror("ERROR", "permission denied")
    else:
        save_as_func()


def open_func(path):
    if (path):
        try:
            f = open(path)
            text_box.delete("1.0", END)
            text_box.insert("1.0", f.read())
            del f
        except FileNotFoundError:
            messagebox.showerror("ERROR", "file not found")
        except PermissionError:
            messagebox.showerror("ERROR", "permission denied")
        except TypeError:
            pass

    if (path == ""):
        global filename
        global preffered_dir
        filename = filedialog.askopenfilename(initialdir=preffered_dir,
                                              title="open",
                                              filetypes=(("all files", "*"),
                                                         ("txt files", "*.txt"),
                                                    )
                                            ) 
        if messagebox.askyesno("Are you sure", "do you want to proceed"):
            try:
                f = open(filename)
                text_box.delete("1.0", END)
                text_box.insert("1.0", f.read())
            except FileNotFoundError:
                messagebox.showerror("ERROR", "file not found")
            except PermissionError:
                messagebox.showerror("ERROR", "permission denied")
            except TypeError:
                pass


def font_size_up():
    global font_size
    font_size = font_size + 1
    text_box.configure(font=("TkDefaultFont", font_size))


def font_size_down():
    global font_size
    if font_size > 0:
        font_size = font_size - 1
        text_box.configure(font=("TkDefaultFont", font_size))


def exit_app():
    exit()


def clear():
    text_box.delete("1.0", END)


text_box = ctk.CTkTextbox(master=mainWindow, width=1200, height=900, font=("TkDefaultFont", font_size))
text_box.pack(side=TOP, expand=True)

if len(sys.argv) > 1:
    if sys.argv[1][0] == "/":
        open_func(sys.argv[1])
    else:
        open_func(working_directory + "/" + sys.argv[1])


exit_button = ctk.CTkButton(master=mainWindow, text="exit", command=exit_app)
exit_button.pack(side=LEFT)

save_as_button = ctk.CTkButton(master=mainWindow, text="save as", command=save_as_func)
save_as_button.pack(side=LEFT)

save_button = ctk.CTkButton(master=mainWindow, text="save", command=save_func)
save_button.pack(side=LEFT)

open_button = ctk.CTkButton(master=mainWindow, text="open", command=lambda: open_func(""))
open_button.pack(side=LEFT)

clear_button = ctk.CTkButton(master=mainWindow, text="clear", command=clear)
clear_button.pack(side=LEFT)

font_size_up_button = ctk.CTkButton(master=mainWindow, text="font size up", command=font_size_up)
font_size_up_button.pack(side=LEFT)

font_size_down_button = ctk.CTkButton(master=mainWindow, text="font size down", command=font_size_down)
font_size_down_button.pack(side=LEFT)

add_pref_dir_button = ctk.CTkButton(master=mainWindow, text="set preffered directory", command=change_pref_dir)
add_pref_dir_button.pack(side=LEFT)

mainWindow.mainloop()
